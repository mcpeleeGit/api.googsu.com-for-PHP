{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","key","value","setState","react_default","a","createElement","reactstrap_es","className","light","tag","Link","to","src","class","alt","onClick","isOpen","navbar","Component","displayName","name","Layout","apply","arguments","NavMenu_NavMenu","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","_populateWeatherData","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","stop","aria-labelledby","map","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","Login","width","height","for","type","placeholder","required","autofocus","App","Layout_Layout","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.291b155f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\"><img src=\"/img/icon/googsu.png\" class=\"logo\" alt=\"logo\"/>Googsu WebApplication1</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\"><img src=\"/img/icon/home.png\" class=\"logo-menu\" alt=\"Home\"/>Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\"><img src=\"/img/icon/counter.png\" class=\"logo-menu\" alt=\"Counter\"/>Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\"><img src=\"/img/icon/fetchdata.png\" class=\"logo-menu\" alt=\"Fetch data\"/>Fetch data</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/login\"><img src=\"/img/icon/login.png\" class=\"logo-menu\" alt=\"Login\"/>Login</NavLink>\r\n                </NavItem>                \r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to my new single-page application, built with:</p>\r\n        <img src=\"/img/home.jpg\" alt=\"home\" class=\"w-100 p-3\"/>\r\n        <ul>\r\n          <li><a href=\"https://www.php.net/\">PHP</a> Custom RESTful API</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='https://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>I will add the application with emphasis on the following contents:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>PHP RESTful API</strong>. The PHP development environment based on Linux can be deployed at the lowest cost. The goal of the <code>PHP RESTful API</code> is to make it possible to replace it with another system at any time with standard interfaces and access controls.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('api/weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n        <img src=\"/img/char11.jpg\" alt=\"home\" class=\"w-25 p-3\"/>\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport class Login extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"text-center\">\r\n        <h1>Login</h1>\r\n        <form class=\"form-signin\">\r\n            <h1 class=\"h3 mb-3 font-weight-normal\">SNS Account sign in</h1>\r\n            <img class=\"mb-4\" src=\"/img/Log in with NAVER_Icon_Green.PNG\" alt=\"Log in with NAVER\" width=\"72\" height=\"72\"/> \r\n            <img class=\"mb-4\" src=\"/img/instagram.png\" alt=\"Log in with Instagram\" width=\"72\" height=\"72\"/>\r\n            <img class=\"mb-4\" src=\"/img/fb_icon_325x325.png\" alt=\"Log in with FaceBook\" width=\"72\" height=\"72\"/>\r\n            <img class=\"mb-4\" src=\"/img/youtube.png\" alt=\"Log in with YouTube\" width=\"72\" height=\"72\"/>\r\n            <img class=\"mb-4\" src=\"/img/twitter.png\" alt=\"Log in with Twitter\" width=\"72\" height=\"72\"/>\r\n            <img class=\"mb-4\" src=\"/img/kakao.png\" alt=\"Log in with Kakao\" width=\"72\" height=\"72\"/>\r\n            <img class=\"mb-4\" src=\"/img/google.png\" alt=\"Log in with Google\" width=\"72\" height=\"72\"/>\r\n            <h1 class=\"h3 mb-3 font-weight-normal\">Googsu Account sign in</h1>\r\n            <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n            <input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required=\"\" autofocus=\"\"/>\r\n            <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n              <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required=\"\"/>\r\n            <label>\r\n              <input type=\"checkbox\" value=\"remember-me\"/> Remember me\r\n            </label>\r\n          \r\n          <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { Login } from './components/Login';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n        <Route path='/login' component={Login} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}