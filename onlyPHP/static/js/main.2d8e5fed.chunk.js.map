{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/Login.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","inherits","createClass","key","value","setState","react_default","a","createElement","reactstrap_es","className","light","tag","Link","to","src","alt","onClick","isOpen","navbar","Component","displayName","name","Layout","apply","arguments","NavMenu_NavMenu","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","_populateWeatherData","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","stop","aria-labelledby","map","forecast","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","Login","handleSubmit","e","email","password","method","headers","Accept","Content-Type","body","JSON","stringify","then","isLoading","console","log","result","history","push","alert","message","catch","error","preventDefault","handleChange","defineProperty","target","onSubmit","bindClick","htmlFor","type","placeholder","required","autoFocus","onChange","App","Layout_Layout","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","App_App","URL","process","origin","addEventListener","concat","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2d8e5fed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\"><img src=\"/img/icon/googsu.png\" className=\"logo\" alt=\"logo\"/>Googsu WebApplication1</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\"><img src=\"/img/icon/home.png\" className=\"logo-menu\" alt=\"Home\"/>Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\"><img src=\"/img/icon/counter.png\" className=\"logo-menu\" alt=\"Counter\"/>Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\"><img src=\"/img/icon/fetchdata.png\" className=\"logo-menu\" alt=\"Fetch data\"/>Fetch data</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/login\"><img src=\"/img/icon/login.png\" className=\"logo-menu\" alt=\"Login\"/>Login</NavLink>\r\n                </NavItem>                \r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to my new single-page application, built with:</p>\r\n        <img src=\"/img/home.jpg\" alt=\"home\" className=\"w-100 p-3\"/>\r\n        <ul>\r\n          <li><a href=\"https://www.php.net/\">PHP</a> Custom RESTful API</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='https://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>I will add the application with emphasis on the following contents:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>PHP RESTful API</strong>. The PHP development environment based on Linux can be deployed at the lowest cost. The goal of the <code>PHP RESTful API</code> is to make it possible to replace it with another system at any time with standard interfaces and access controls.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('api/weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n        <img src=\"/img/char11.jpg\" alt=\"home\" className=\"w-25 p-3\"/>\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport class Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email:'', password:'', data:[], isLoading: true };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    const data = { email:this.state.email, password:this.state.password };\r\n    fetch('api/customer/login',{method: 'POST', headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}, body: JSON.stringify(data)})\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ data: data, isLoading: false });\r\n        console.log(data);\r\n \r\n        if(data.result === \"success\") this.props.history.push('/');\r\n        else alert(data.message);\r\n      }) \r\n      .catch(error => this.setState({ error, isLoading: false }));\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleChange(e){\r\n    this.setState({ [e.target.name]:e.target.value })\r\n  }\r\n\r\n  bindClick(target){\r\n    alert(target);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h1>Login</h1>\r\n        <form className=\"form-signin\" onSubmit={this.handleSubmit}>\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">SNS Account sign in</h1>\r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/naver.PNG\" alt=\"Log in with NAVER\" /> \r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/instagram.png\" alt=\"Log in with Instagram\" onClick={this.bindClick.bind(this, 'instagram')}/>\r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/facebook.png\" alt=\"Log in with FaceBook\"/>\r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/youtube.png\" alt=\"Log in with YouTube\"/>\r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/twitter.png\" alt=\"Log in with Twitter\"/>\r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/kakao.png\" alt=\"Log in with Kakao\"/>\r\n            <img className=\"mb-8 sns-icon\" src=\"/img/snsicon/google.png\" alt=\"Log in with Google\"/>\r\n            <hr/>\r\n            <h1 className=\"h3 mb-3 font-weight-normal\">Googsu Account sign in</h1>\r\n            <label htmlFor=\"inputEmail\" className=\"sr-only\">Email address</label>\r\n            <input type=\"email\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" required=\"required\" autoFocus=\"autoFocus\" name=\"email\" onChange={this.handleChange}/>\r\n            <label htmlFor=\"inputPassword\" className=\"sr-only\">Password</label>\r\n              <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" required=\"required\" name=\"password\" onChange={this.handleChange}/>\r\n          <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { Login } from './components/Login';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n        <Route path='/login' component={Login} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}